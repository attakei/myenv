# --------------------------------------
# Settings for packages by only tools
# --------------------------------------
---
- hosts: pc
  vars_files:
    - 'vars/{{ ansible_distribution }}.yml'
    - vars/packages.yml
  tasks:
    - name: Install packages by pacman(arch only)
      become: yes
      pacman:
        name: '{{ item.name }}'
        state: '{{ item.state }}'
      with_items: '{{ packages_master|by_module("pacman") }}'
      when: ansible_distribution == 'Archlinux'
    - block:
        - name: Install packages by homebrew(mac only)
          homebrew:
            name: '{{ item.name }}'
            state: '{{ item.state }}'
          with_items: '{{ packages_master|by_module("homebrew") }}'
        - name: Install packages by homebrew-cask(mac only)
          homebrew_cask:
            name: '{{ item.name }}'
            state: '{{ item.state }}'
          with_items: '{{ packages_master|by_module("homebrew_cask") }}'
      when: ansible_distribution == 'MacOSX'
    - name: Install packages by pip(path specified only)
      pip:
        name: '{{ item.name }}'
        state: '{{ item.state }}'
        executable: '{{ commands.pip }}'
        extra_args: --user
      with_items: '{{ packages_master|by_module("pip") }}'
      when: '"pip" in commands'
    - name: Prepare AppImage space
      file:
        state: directory
        path: '{{ ansible_env.HOME }}/.local/opt'
    - name: Download and link AppImages (Linux only)
      block:
        - get_url:
            url: '{{ item.url }}'
            dest: '{{ ansible_env.HOME }}/.local/opt/{{ item.name }}'
            mode: 'u+x'
          with_items: '{{ packages_master|by_module("appimage") }}'
        - file:
            src: '{{ ansible_env.HOME }}/.local/opt/{{ item.name }}'
            dest: '{{ ansible_env.HOME }}/.local/bin/{{ item.name }}'
            state: link
          with_items: '{{ packages_master|by_module("appimage") }}'
      when: ansible_distribution == 'Archlinux'
